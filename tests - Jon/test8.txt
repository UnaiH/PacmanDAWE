this.loadLevel = function() {
      	// test5
      	// Tu código aquí
      	// leer res/levels/1.txt y guardarlo en el atributo map	
      	// haciendo uso de setMapTile

      	var direccion = "https://raw.githubusercontent.com/AinhoY/froga/main/1.txt";
      	var level = this;
      	$.ajax({url: direccion, success: function(result) {

          	var r2 = JSON.stringify(result);
          	var r3 = r2.split("\\n");

          	level.lvlWidth = r3[0].split(" ")[2];
          	level.lvlHeight = r3[1].split(" ")[2];
          	for (var row = 0; row < level.lvlHeight; row++) {
            		var row2 = r3[row + 4].trim().split(" ");
            		for (var col = 0; col < level.lvlWidth; col++) {
              			var value = row2[col];
              			if (value == 4) {
                			player.homeX = thisGame.TILE_WIDTH * (col + 0.5) - player.radius;
                			player.homeY = thisGame.TILE_HEIGHT * (row + 0.5) - player.radius;
                			reset();
              			}
				else if (value == 2) {
                			level.pellets++;
              			}
              			level.setMapTile(row, col, value);
            		}
          	}

        }});

};

this.checkIfHitSomething = function(playerX, playerY, row, col) {
      	var tileID = {
        	'doorH': 20,
        	'doorV': 21,
        	'pelletPower': 3,
        	'pacman': 4,
        	'empty': 0,
        	'pellet': 2,
      	};
      	// test8
      	// Tu código aquí
      	//  Gestiona la recogida de píldoras

      	var playerX2 = playerX + player.radius * 2,
        	playerY2 = playerY + player.radius * 2,
        	colLeft = Math.floor(playerX / thisGame.TILE_WIDTH),
        	colRight = Math.floor(playerX2 / thisGame.TILE_WIDTH),
        	rowUp = Math.floor(playerY / thisGame.TILE_HEIGHT),
        	rowDown = Math.floor(playerY2 / thisGame.TILE_HEIGHT),
        	cols = [colLeft],
        	rows = [rowUp];

      	if (colLeft != colRight) {
        	cols[1] = colRight;
      	}
      	if (rowUp != rowDown) {
        	rows[1] = rowDown;
      	}

      	for (var i = 0; i < rows.length; i++) {
        	var r = rows[i];
        	for (var j = 0; j < cols.length; j++) {
          		var c = cols[j];
          		var value = this.getMapTile(r, c);
          		if (value == tileID.pellet) {
            			this.setMapTile(r, c, 0);
            			this.pellets--;
            			if (this.pellets == 0) {
              				console.log("Next level!");
            			}
          		}
        	}
      	}

};