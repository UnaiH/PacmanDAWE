//  variable global temporalmente para poder testear el ejercicio
inputStates = {
  	left: false,
    	right: false,
    	up: false,
    	down: false,
    	space: false,
};

var Pacman = function() {
	this.radius = 15;
	this.posX = 0;
	this.posY = 0;
	this.speed = 5;
	this.angle1 = 0.25;
	this.angle2 = 1.75;
    	this.velX = 0;
	this.velY = 0;
};

Pacman.prototype.move = function() {

	// test4
	// Tu código aquí
    
    	if (this.velX != 0) {
      		if (this.x + this.velX >= 0 && this.x + this.velX <= w - this.radius * 2) {
        		this.x = this.x + this.velX;
      		}
		else {
        		this.velX = 0;
      		}
    	}
    	else if (this.velY != 0) {
      		if (this.y + this.velY >= 0 && this.y + this.velY <= h - this.radius * 2) {
        		this.y = this.y + this.velY;
      		}
		else {
        		this.velY = 0;
      		}
    	}
      
};

// Función para pintar el Pacman
Pacman.prototype.draw = function(x, y) {
         
	// Pac Man
	// test2   
	// Tu código aquí
	// ojo: en el test2 esta función se llama drawPacman(x,y))	 
    
    	ctx.beginPath();
	ctx.arc(this.x+this.radius, this.y+this.radius, this.radius, this.angle1*Math.PI, this.angle2*Math.PI);
	ctx.lineTo(this.x+this.radius, this.y+this.radius);
    	ctx.closePath();
    	ctx.strokeStyle = "black";
    	ctx.stroke();
    	ctx.fillStyle = "yellow";
    	ctx.fill();
    
}

var checkInputs = function(){
	// test4
	// Tu código aquí   

	if (inputStates.left) {
      		player.velX = -player.speed;
      		player.velY = 0;
    	}
    	else if (inputStates.right) {
      		player.velX = player.speed;
      		player.velY = 0;
    	}
    	else if (inputStates.up) {
      		player.velX = 0;
      		player.velY = -player.speed;
    	}
    	else if (inputStates.down) {
      		player.velX = 0;
      		player.velY = player.speed;
    	}

};

var addListeners = function(){
	// add the listener to the main, window object, and update the states
	// test4
	// Tu código aquí
    
    	function habilitarGestor() {
      		window.addEventListener('keydown', keyDown, false);
      		window.addEventListener('keydown', disableScroll, false);
      		window.addEventListener('keyup', keyUp, false);
      		window.addEventListener('keyup', disableScroll, false);
    	}

    	function deshabilitarGestor() {
      		window.removeEventListener('keydown', keyDown, false);
      		window.removeEventListener('keydown', disableScroll, false);
      		window.removeEventListener('keyup', keyUp, false);
      		window.removeEventListener('keyup', disableScroll, false);
   	}

    	window.onload = habilitarGestor;
    	window.onblur = deshabilitarGestor;
    	window.onfocus = habilitarGestor;

    	function keyDown(e) {
      		const keyName = e.key;
      		if (keyName === 'ArrowLeft') {
        		inputStates.left = true;
      		} else if (keyName === 'ArrowRight') {
        		inputStates.right = true;
      		} else if (keyName === 'ArrowUp') {
        		inputStates.up = true;
      		} else if (keyName === 'ArrowDown') {
        		inputStates.down = true;
      		} else if (keyName === ' ') {
        		console.log(`Space pressed`);
      		}
    	}

    	function keyUp(e) {
      		const keyName = e.key;
      		if (keyName === 'ArrowLeft') {
       	 		inputStates.left = false;
      		} else if (keyName === 'ArrowRight') {
        		inputStates.right = false;
      		} else if (keyName === 'ArrowUp') {
        		inputStates.up = false;
      		} else if (keyName === 'ArrowDown') {
        		inputStates.down = false;
      		}
    	}

    	function disableScroll(e) {
      		if (["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight", " "].indexOf(e.code) > -1) {
        		event.preventDefault();
      		}
    	}
    
};